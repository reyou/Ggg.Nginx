load_module modules/ngx_http_js_module.so;
load_module modules/ngx_stream_js_module.so;

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 8000;
        location / {
            return 200 $http_foo\n;
        }
    }
}
# https://docs.nginx.com/nginx/admin-guide/load-balancer/tcp-udp-load-balancer/
# http://localhost:12345
# http://localhost:12346
stream {
    # Specifies a file that implements server and 
    # variable handlers in njs.
    js_include conf.d/stream.js;
    # Sets an njs function for the specified variable.
    js_set $bar bar;
    js_set $req_line req_line;

    server {
        listen 12345;
        # Sets an njs function which will be called 
        # at the preread phase
        js_preread preread;
        return     $req_line;
    }

    server {
        listen 12346;

        js_access  access;
        proxy_pass 127.0.0.1:8000;
        js_filter  header_inject;
    }
}

 

